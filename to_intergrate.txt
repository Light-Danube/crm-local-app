MASTER.HTML:
uploadButton.addEventListener("click", function () {
        const file = videoFileInput.files[0];
        if (file) {
            const formData = new FormData();
            // Generate a unique filename
            const uniqueFilename = generateUniqueFilename(file.name);
            
            formData.append("video", file, uniqueFilename);
            formData.append("masterPageID", masterPageID);

            fetch(`/upload?userID=${masterPageID}`, {
                method: "POST",
                body: formData,
            })
            .then((response) => {
                if (response.ok) {
                    socket.emit("video uploaded", { videoId: uniqueFilename});
                    console.log("Video uploaded successfully!");
                } else {
                    console.error("Failed to upload video.");
                }
            })
            .catch((error) => {
                console.error("Error uploading video:", error);
            });
        } else {
            console.error("No file selected.");
        }
    });
    
    // Function to generate a unique filename
    function generateUniqueFilename(originalFilename) {
        const timestamp = new Date().getTime(); // Get current timestamp
        const randomString = Math.random().toString(36).substring(2, 15); // Generate a random string
        const fileExtension = originalFilename.split('.').pop(); // Get the file extension
        return `${timestamp}-${randomString}.${fileExtension}`;
    }

PUPPET.HTML:
// Listen for the emitted video name from the master page
      /*socket.on("file uploaded", (videoName) => {
        console.log("Received uploaded video:", videoName);
        // Load the uploaded video by its name
        videoPlayer.src = `/home/uscreene/ucreate.org.ua/crm/uploads/${videoName}`;
        // Reset the video to the beginning and pause it
        videoPlayer.currentTime = 0;
        videoPlayer.pause();
      });*/
// Listen for the uploaded video URL emitted from the master page
      socket.on("file uploaded", ({ videoId }) => {
        // Load the uploaded video URL on the puppet page
        console.log(videoId)
        videoPlayer.src = `/uploads/${videoId}`;
        videoPlayer.currentTime = 0;
        videoPlayer.pause();
      });

SERVER.JS:
// Настройка папки для загрузки видео файлов
const storage = multer.diskStorage({
   destination: '/home/uscreene/ucreate.org.ua/crm/uploads',
   filename: (req, file, cb) => {
     cb(null, file.originalname);
   }
 });


// Handle video requests from puppet page
app.get("/video/:videoId", (req, res) => {
  const { videoId } = req.params;
  // Check if videoId exists and serve the corresponding video file
  if (videoIds.hasOwnProperty(videoId)) {
    const videoPath = `/home/uscreene/ucreate.org.ua/crm/uploads/${videoIds[videoId]}`;
    res.sendFile(videoPath, { root: __dirname });
  } else {
    res.status(404).send("Video not found");
  }
});


app.post('/upload', upload.single('video'), (req, res) => {
   try {
       const masterId = req.query.userID;
       console.log("Received file:", req.file);
       console.log("Emitted event by connection id:", masterId); 
       if (masterId) {
           if (req.file) {
               console.log("Video loaded successfully to server.", req.file.filename);
               //const videoURL = 'http://crm.ucreate.org.ua/uploads${req.file.filename}';
               
               //io.to(masterId).emit("file uploaded", { url: req.file.filename });
               //res.redirect(`/video.html?video=${req.file.filename}`);
               //io.to(masterId).emit("file uploaded", { url: videoURL })
               io.to(masterId).emit("file uploaded", { videoId: req.file.filename });
               res.redirect(`/video.html?video=${req.file.filename}`);
           } else {
               const youtubeUrl = req.body.youtubeUrl;
               if (youtubeUrl) {
                   res.redirect(`/video.html?video=${youtubeUrl}`);
               } else {
                   res.status(400).send('No file or YouTube URL provided');
               }
           }
       } else {
           res.status(404).send('Connection ID not found or invalid');
       }
   } catch (err) {
       console.error('Error uploading:', err);
       res.status(500).send('Error uploading');
   }
});

// Handle video upload from master page
    socket.on("video uploaded", ({ videoId, masterPageID }) => {
        // Emit event to the puppet page with the unique identifier
        socket.to(socket.connectionSocketID).emit("file uploaded", { videoId });
    });